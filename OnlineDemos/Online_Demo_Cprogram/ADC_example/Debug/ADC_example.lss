
ADC_example.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000614  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005c0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000614  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000644  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  00000684  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b31  00000000  00000000  000006d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a08  00000000  00000000  00001205  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003db  00000000  00000000  00001c0d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000e0  00000000  00000000  00001fe8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000505  00000000  00000000  000020c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001d2  00000000  00000000  000025cd  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  0000279f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
   8:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
   c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  10:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  14:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  18:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  1c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  20:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  24:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  28:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  2c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  30:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  34:	0c 94 96 00 	jmp	0x12c	; 0x12c <__vector_13>
  38:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  3c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  40:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  44:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  48:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  4c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  50:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  54:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  58:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  5c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  60:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  64:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  68:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  6c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  70:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  74:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  78:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  7c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  80:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  84:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  88:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  8c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  90:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  94:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  98:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  9c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  a0:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  a4:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  a8:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  ac:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  b0:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61
  c0:	0e 94 87 00 	call	0x10e	; 0x10e <main>
  c4:	0c 94 de 02 	jmp	0x5bc	; 0x5bc <_exit>

000000c8 <__bad_interrupt>:
  c8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000cc <usart_init>:
	TCNT1 = 49911; // Reset timer
}

void usart_init (void)
{
	UCSR0B = (1<<TXEN0);
  cc:	88 e0       	ldi	r24, 0x08	; 8
  ce:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C = (1<< UCSZ01)|(1<<UCSZ00);
  d2:	86 e0       	ldi	r24, 0x06	; 6
  d4:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UBRR0L = F_CPU/16/BAUD_RATE-1;
  d8:	87 e6       	ldi	r24, 0x67	; 103
  da:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  de:	08 95       	ret

000000e0 <adc_init>:
}

void adc_init (void)
{
	/** Setup and enable ADC **/
	ADMUX = (0<<REFS1)|    // Reference Selection Bits
  e0:	85 e4       	ldi	r24, 0x45	; 69
  e2:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	(1<<REFS0)|    // AVcc - external cap at AREF
	(0<<ADLAR)|    // ADC Left Adjust Result
	(1<<MUX2)|     // Analog Channel Selection Bits
	(0<<MUX1)|     // ADC4 (PC4 PIN27)
	(1<<MUX0);
	ADCSRA = (1<<ADEN)|    // ADC ENable
  e6:	85 e8       	ldi	r24, 0x85	; 133
  e8:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
  ec:	08 95       	ret

000000ee <timer_init>:
	(1<<ADPS0);
}

void timer_init (void)
{
	TCCR1B |= 5; //(1 << CS12) | (1 << CS10); // Sets prescaler to 1024
  ee:	e1 e8       	ldi	r30, 0x81	; 129
  f0:	f0 e0       	ldi	r31, 0x00	; 0
  f2:	80 81       	ld	r24, Z
  f4:	85 60       	ori	r24, 0x05	; 5
  f6:	80 83       	st	Z, r24
	TIMSK1 = (1 << TOIE1); // Enables overflow flag
  f8:	81 e0       	ldi	r24, 0x01	; 1
  fa:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
	TCNT1 = 49911; // 1 second delay = (0xFFFF) - TCNT = 65535 - 15624 = 49911
  fe:	87 ef       	ldi	r24, 0xF7	; 247
 100:	92 ec       	ldi	r25, 0xC2	; 194
 102:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 106:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	sei();
 10a:	78 94       	sei
 10c:	08 95       	ret

0000010e <main>:

void usart_send (unsigned char ch);

int main (void)
{
	timer_init ();
 10e:	0e 94 77 00 	call	0xee	; 0xee <timer_init>
	usart_init ();
 112:	0e 94 66 00 	call	0xcc	; 0xcc <usart_init>
	adc_init ();
 116:	0e 94 70 00 	call	0xe0	; 0xe0 <adc_init>
 11a:	ff cf       	rjmp	.-2      	; 0x11a <main+0xc>

0000011c <usart_send>:
	sei();
}

void usart_send (unsigned char ch)
{
	while (! (UCSR0A & (1<<UDRE0))); 	//wait until UDR0 is empty
 11c:	e0 ec       	ldi	r30, 0xC0	; 192
 11e:	f0 e0       	ldi	r31, 0x00	; 0
 120:	90 81       	ld	r25, Z
 122:	95 ff       	sbrs	r25, 5
 124:	fd cf       	rjmp	.-6      	; 0x120 <usart_send+0x4>
	UDR0 = ch;							//transmit ch
 126:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 12a:	08 95       	ret

0000012c <__vector_13>:
	}
	return 0;
}

ISR (TIMER1_OVF_vect)
{
 12c:	1f 92       	push	r1
 12e:	0f 92       	push	r0
 130:	0f b6       	in	r0, 0x3f	; 63
 132:	0f 92       	push	r0
 134:	11 24       	eor	r1, r1
 136:	2f 93       	push	r18
 138:	3f 93       	push	r19
 13a:	4f 93       	push	r20
 13c:	5f 93       	push	r21
 13e:	6f 93       	push	r22
 140:	7f 93       	push	r23
 142:	8f 93       	push	r24
 144:	9f 93       	push	r25
 146:	af 93       	push	r26
 148:	bf 93       	push	r27
 14a:	cf 93       	push	r28
 14c:	df 93       	push	r29
 14e:	ef 93       	push	r30
 150:	ff 93       	push	r31
	ADCSRA|=(1<<ADSC);	//start conversion
 152:	ea e7       	ldi	r30, 0x7A	; 122
 154:	f0 e0       	ldi	r31, 0x00	; 0
 156:	80 81       	ld	r24, Z
 158:	80 64       	ori	r24, 0x40	; 64
 15a:	80 83       	st	Z, r24
	while((ADCSRA&(1<<ADIF))==0);//wait for conversion to finish
 15c:	80 81       	ld	r24, Z
 15e:	84 ff       	sbrs	r24, 4
 160:	fd cf       	rjmp	.-6      	; 0x15c <__vector_13+0x30>
	
	ADCSRA |= (1<<ADIF);
 162:	ea e7       	ldi	r30, 0x7A	; 122
 164:	f0 e0       	ldi	r31, 0x00	; 0
 166:	80 81       	ld	r24, Z
 168:	80 61       	ori	r24, 0x10	; 16
 16a:	80 83       	st	Z, r24
	
	int a = ADCL;
 16c:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
	a = a | (ADCH<<8);
 170:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
	a = (a/1024.0) * 5000/10;
 174:	70 e0       	ldi	r23, 0x00	; 0
 176:	78 2b       	or	r23, r24
 178:	07 2e       	mov	r0, r23
 17a:	00 0c       	add	r0, r0
 17c:	88 0b       	sbc	r24, r24
 17e:	99 0b       	sbc	r25, r25
 180:	0e 94 bd 01 	call	0x37a	; 0x37a <__floatsisf>
 184:	20 e0       	ldi	r18, 0x00	; 0
 186:	30 e0       	ldi	r19, 0x00	; 0
 188:	40 e8       	ldi	r20, 0x80	; 128
 18a:	5a e3       	ldi	r21, 0x3A	; 58
 18c:	0e 94 49 02 	call	0x492	; 0x492 <__mulsf3>
 190:	20 e0       	ldi	r18, 0x00	; 0
 192:	30 e4       	ldi	r19, 0x40	; 64
 194:	4c e9       	ldi	r20, 0x9C	; 156
 196:	55 e4       	ldi	r21, 0x45	; 69
 198:	0e 94 49 02 	call	0x492	; 0x492 <__mulsf3>
 19c:	20 e0       	ldi	r18, 0x00	; 0
 19e:	30 e0       	ldi	r19, 0x00	; 0
 1a0:	40 e2       	ldi	r20, 0x20	; 32
 1a2:	51 e4       	ldi	r21, 0x41	; 65
 1a4:	0e 94 13 01 	call	0x226	; 0x226 <__divsf3>
 1a8:	0e 94 85 01 	call	0x30a	; 0x30a <__fixsfsi>
	usart_send((a/100)+'0');
 1ac:	cb 01       	movw	r24, r22
 1ae:	64 e6       	ldi	r22, 0x64	; 100
 1b0:	70 e0       	ldi	r23, 0x00	; 0
 1b2:	0e 94 b6 02 	call	0x56c	; 0x56c <__divmodhi4>
 1b6:	ec 01       	movw	r28, r24
 1b8:	80 e3       	ldi	r24, 0x30	; 48
 1ba:	86 0f       	add	r24, r22
 1bc:	0e 94 8e 00 	call	0x11c	; 0x11c <usart_send>
	a = a % 100;
	usart_send((a/10)+'0');
 1c0:	ce 01       	movw	r24, r28
 1c2:	6a e0       	ldi	r22, 0x0A	; 10
 1c4:	70 e0       	ldi	r23, 0x00	; 0
 1c6:	0e 94 b6 02 	call	0x56c	; 0x56c <__divmodhi4>
 1ca:	c8 2f       	mov	r28, r24
 1cc:	80 e3       	ldi	r24, 0x30	; 48
 1ce:	86 0f       	add	r24, r22
 1d0:	0e 94 8e 00 	call	0x11c	; 0x11c <usart_send>
	a = a % 10;
	//a = a * (9/5) + 32; // celsius to fahrenheit
	usart_send((a)+'0');
 1d4:	80 e3       	ldi	r24, 0x30	; 48
 1d6:	8c 0f       	add	r24, r28
 1d8:	0e 94 8e 00 	call	0x11c	; 0x11c <usart_send>
	usart_send('\r');
 1dc:	8d e0       	ldi	r24, 0x0D	; 13
 1de:	0e 94 8e 00 	call	0x11c	; 0x11c <usart_send>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1e2:	2f ef       	ldi	r18, 0xFF	; 255
 1e4:	81 ee       	ldi	r24, 0xE1	; 225
 1e6:	94 e0       	ldi	r25, 0x04	; 4
 1e8:	21 50       	subi	r18, 0x01	; 1
 1ea:	80 40       	sbci	r24, 0x00	; 0
 1ec:	90 40       	sbci	r25, 0x00	; 0
 1ee:	e1 f7       	brne	.-8      	; 0x1e8 <__vector_13+0xbc>
 1f0:	00 c0       	rjmp	.+0      	; 0x1f2 <__vector_13+0xc6>
 1f2:	00 00       	nop
	_delay_ms(100);
	TCNT1 = 49911; // Reset timer
 1f4:	87 ef       	ldi	r24, 0xF7	; 247
 1f6:	92 ec       	ldi	r25, 0xC2	; 194
 1f8:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 1fc:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
}
 200:	ff 91       	pop	r31
 202:	ef 91       	pop	r30
 204:	df 91       	pop	r29
 206:	cf 91       	pop	r28
 208:	bf 91       	pop	r27
 20a:	af 91       	pop	r26
 20c:	9f 91       	pop	r25
 20e:	8f 91       	pop	r24
 210:	7f 91       	pop	r23
 212:	6f 91       	pop	r22
 214:	5f 91       	pop	r21
 216:	4f 91       	pop	r20
 218:	3f 91       	pop	r19
 21a:	2f 91       	pop	r18
 21c:	0f 90       	pop	r0
 21e:	0f be       	out	0x3f, r0	; 63
 220:	0f 90       	pop	r0
 222:	1f 90       	pop	r1
 224:	18 95       	reti

00000226 <__divsf3>:
 226:	0e 94 27 01 	call	0x24e	; 0x24e <__divsf3x>
 22a:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__fp_round>
 22e:	0e 94 08 02 	call	0x410	; 0x410 <__fp_pscB>
 232:	58 f0       	brcs	.+22     	; 0x24a <__divsf3+0x24>
 234:	0e 94 01 02 	call	0x402	; 0x402 <__fp_pscA>
 238:	40 f0       	brcs	.+16     	; 0x24a <__divsf3+0x24>
 23a:	29 f4       	brne	.+10     	; 0x246 <__divsf3+0x20>
 23c:	5f 3f       	cpi	r21, 0xFF	; 255
 23e:	29 f0       	breq	.+10     	; 0x24a <__divsf3+0x24>
 240:	0c 94 f8 01 	jmp	0x3f0	; 0x3f0 <__fp_inf>
 244:	51 11       	cpse	r21, r1
 246:	0c 94 43 02 	jmp	0x486	; 0x486 <__fp_szero>
 24a:	0c 94 fe 01 	jmp	0x3fc	; 0x3fc <__fp_nan>

0000024e <__divsf3x>:
 24e:	0e 94 20 02 	call	0x440	; 0x440 <__fp_split3>
 252:	68 f3       	brcs	.-38     	; 0x22e <__divsf3+0x8>

00000254 <__divsf3_pse>:
 254:	99 23       	and	r25, r25
 256:	b1 f3       	breq	.-20     	; 0x244 <__divsf3+0x1e>
 258:	55 23       	and	r21, r21
 25a:	91 f3       	breq	.-28     	; 0x240 <__divsf3+0x1a>
 25c:	95 1b       	sub	r25, r21
 25e:	55 0b       	sbc	r21, r21
 260:	bb 27       	eor	r27, r27
 262:	aa 27       	eor	r26, r26
 264:	62 17       	cp	r22, r18
 266:	73 07       	cpc	r23, r19
 268:	84 07       	cpc	r24, r20
 26a:	38 f0       	brcs	.+14     	; 0x27a <__divsf3_pse+0x26>
 26c:	9f 5f       	subi	r25, 0xFF	; 255
 26e:	5f 4f       	sbci	r21, 0xFF	; 255
 270:	22 0f       	add	r18, r18
 272:	33 1f       	adc	r19, r19
 274:	44 1f       	adc	r20, r20
 276:	aa 1f       	adc	r26, r26
 278:	a9 f3       	breq	.-22     	; 0x264 <__divsf3_pse+0x10>
 27a:	35 d0       	rcall	.+106    	; 0x2e6 <__divsf3_pse+0x92>
 27c:	0e 2e       	mov	r0, r30
 27e:	3a f0       	brmi	.+14     	; 0x28e <__divsf3_pse+0x3a>
 280:	e0 e8       	ldi	r30, 0x80	; 128
 282:	32 d0       	rcall	.+100    	; 0x2e8 <__divsf3_pse+0x94>
 284:	91 50       	subi	r25, 0x01	; 1
 286:	50 40       	sbci	r21, 0x00	; 0
 288:	e6 95       	lsr	r30
 28a:	00 1c       	adc	r0, r0
 28c:	ca f7       	brpl	.-14     	; 0x280 <__divsf3_pse+0x2c>
 28e:	2b d0       	rcall	.+86     	; 0x2e6 <__divsf3_pse+0x92>
 290:	fe 2f       	mov	r31, r30
 292:	29 d0       	rcall	.+82     	; 0x2e6 <__divsf3_pse+0x92>
 294:	66 0f       	add	r22, r22
 296:	77 1f       	adc	r23, r23
 298:	88 1f       	adc	r24, r24
 29a:	bb 1f       	adc	r27, r27
 29c:	26 17       	cp	r18, r22
 29e:	37 07       	cpc	r19, r23
 2a0:	48 07       	cpc	r20, r24
 2a2:	ab 07       	cpc	r26, r27
 2a4:	b0 e8       	ldi	r27, 0x80	; 128
 2a6:	09 f0       	breq	.+2      	; 0x2aa <__divsf3_pse+0x56>
 2a8:	bb 0b       	sbc	r27, r27
 2aa:	80 2d       	mov	r24, r0
 2ac:	bf 01       	movw	r22, r30
 2ae:	ff 27       	eor	r31, r31
 2b0:	93 58       	subi	r25, 0x83	; 131
 2b2:	5f 4f       	sbci	r21, 0xFF	; 255
 2b4:	3a f0       	brmi	.+14     	; 0x2c4 <__divsf3_pse+0x70>
 2b6:	9e 3f       	cpi	r25, 0xFE	; 254
 2b8:	51 05       	cpc	r21, r1
 2ba:	78 f0       	brcs	.+30     	; 0x2da <__divsf3_pse+0x86>
 2bc:	0c 94 f8 01 	jmp	0x3f0	; 0x3f0 <__fp_inf>
 2c0:	0c 94 43 02 	jmp	0x486	; 0x486 <__fp_szero>
 2c4:	5f 3f       	cpi	r21, 0xFF	; 255
 2c6:	e4 f3       	brlt	.-8      	; 0x2c0 <__divsf3_pse+0x6c>
 2c8:	98 3e       	cpi	r25, 0xE8	; 232
 2ca:	d4 f3       	brlt	.-12     	; 0x2c0 <__divsf3_pse+0x6c>
 2cc:	86 95       	lsr	r24
 2ce:	77 95       	ror	r23
 2d0:	67 95       	ror	r22
 2d2:	b7 95       	ror	r27
 2d4:	f7 95       	ror	r31
 2d6:	9f 5f       	subi	r25, 0xFF	; 255
 2d8:	c9 f7       	brne	.-14     	; 0x2cc <__divsf3_pse+0x78>
 2da:	88 0f       	add	r24, r24
 2dc:	91 1d       	adc	r25, r1
 2de:	96 95       	lsr	r25
 2e0:	87 95       	ror	r24
 2e2:	97 f9       	bld	r25, 7
 2e4:	08 95       	ret
 2e6:	e1 e0       	ldi	r30, 0x01	; 1
 2e8:	66 0f       	add	r22, r22
 2ea:	77 1f       	adc	r23, r23
 2ec:	88 1f       	adc	r24, r24
 2ee:	bb 1f       	adc	r27, r27
 2f0:	62 17       	cp	r22, r18
 2f2:	73 07       	cpc	r23, r19
 2f4:	84 07       	cpc	r24, r20
 2f6:	ba 07       	cpc	r27, r26
 2f8:	20 f0       	brcs	.+8      	; 0x302 <__divsf3_pse+0xae>
 2fa:	62 1b       	sub	r22, r18
 2fc:	73 0b       	sbc	r23, r19
 2fe:	84 0b       	sbc	r24, r20
 300:	ba 0b       	sbc	r27, r26
 302:	ee 1f       	adc	r30, r30
 304:	88 f7       	brcc	.-30     	; 0x2e8 <__divsf3_pse+0x94>
 306:	e0 95       	com	r30
 308:	08 95       	ret

0000030a <__fixsfsi>:
 30a:	0e 94 8c 01 	call	0x318	; 0x318 <__fixunssfsi>
 30e:	68 94       	set
 310:	b1 11       	cpse	r27, r1
 312:	0c 94 43 02 	jmp	0x486	; 0x486 <__fp_szero>
 316:	08 95       	ret

00000318 <__fixunssfsi>:
 318:	0e 94 28 02 	call	0x450	; 0x450 <__fp_splitA>
 31c:	88 f0       	brcs	.+34     	; 0x340 <__fixunssfsi+0x28>
 31e:	9f 57       	subi	r25, 0x7F	; 127
 320:	98 f0       	brcs	.+38     	; 0x348 <__fixunssfsi+0x30>
 322:	b9 2f       	mov	r27, r25
 324:	99 27       	eor	r25, r25
 326:	b7 51       	subi	r27, 0x17	; 23
 328:	b0 f0       	brcs	.+44     	; 0x356 <__fixunssfsi+0x3e>
 32a:	e1 f0       	breq	.+56     	; 0x364 <__fixunssfsi+0x4c>
 32c:	66 0f       	add	r22, r22
 32e:	77 1f       	adc	r23, r23
 330:	88 1f       	adc	r24, r24
 332:	99 1f       	adc	r25, r25
 334:	1a f0       	brmi	.+6      	; 0x33c <__fixunssfsi+0x24>
 336:	ba 95       	dec	r27
 338:	c9 f7       	brne	.-14     	; 0x32c <__fixunssfsi+0x14>
 33a:	14 c0       	rjmp	.+40     	; 0x364 <__fixunssfsi+0x4c>
 33c:	b1 30       	cpi	r27, 0x01	; 1
 33e:	91 f0       	breq	.+36     	; 0x364 <__fixunssfsi+0x4c>
 340:	0e 94 42 02 	call	0x484	; 0x484 <__fp_zero>
 344:	b1 e0       	ldi	r27, 0x01	; 1
 346:	08 95       	ret
 348:	0c 94 42 02 	jmp	0x484	; 0x484 <__fp_zero>
 34c:	67 2f       	mov	r22, r23
 34e:	78 2f       	mov	r23, r24
 350:	88 27       	eor	r24, r24
 352:	b8 5f       	subi	r27, 0xF8	; 248
 354:	39 f0       	breq	.+14     	; 0x364 <__fixunssfsi+0x4c>
 356:	b9 3f       	cpi	r27, 0xF9	; 249
 358:	cc f3       	brlt	.-14     	; 0x34c <__fixunssfsi+0x34>
 35a:	86 95       	lsr	r24
 35c:	77 95       	ror	r23
 35e:	67 95       	ror	r22
 360:	b3 95       	inc	r27
 362:	d9 f7       	brne	.-10     	; 0x35a <__fixunssfsi+0x42>
 364:	3e f4       	brtc	.+14     	; 0x374 <__fixunssfsi+0x5c>
 366:	90 95       	com	r25
 368:	80 95       	com	r24
 36a:	70 95       	com	r23
 36c:	61 95       	neg	r22
 36e:	7f 4f       	sbci	r23, 0xFF	; 255
 370:	8f 4f       	sbci	r24, 0xFF	; 255
 372:	9f 4f       	sbci	r25, 0xFF	; 255
 374:	08 95       	ret

00000376 <__floatunsisf>:
 376:	e8 94       	clt
 378:	09 c0       	rjmp	.+18     	; 0x38c <__floatsisf+0x12>

0000037a <__floatsisf>:
 37a:	97 fb       	bst	r25, 7
 37c:	3e f4       	brtc	.+14     	; 0x38c <__floatsisf+0x12>
 37e:	90 95       	com	r25
 380:	80 95       	com	r24
 382:	70 95       	com	r23
 384:	61 95       	neg	r22
 386:	7f 4f       	sbci	r23, 0xFF	; 255
 388:	8f 4f       	sbci	r24, 0xFF	; 255
 38a:	9f 4f       	sbci	r25, 0xFF	; 255
 38c:	99 23       	and	r25, r25
 38e:	a9 f0       	breq	.+42     	; 0x3ba <__floatsisf+0x40>
 390:	f9 2f       	mov	r31, r25
 392:	96 e9       	ldi	r25, 0x96	; 150
 394:	bb 27       	eor	r27, r27
 396:	93 95       	inc	r25
 398:	f6 95       	lsr	r31
 39a:	87 95       	ror	r24
 39c:	77 95       	ror	r23
 39e:	67 95       	ror	r22
 3a0:	b7 95       	ror	r27
 3a2:	f1 11       	cpse	r31, r1
 3a4:	f8 cf       	rjmp	.-16     	; 0x396 <__floatsisf+0x1c>
 3a6:	fa f4       	brpl	.+62     	; 0x3e6 <__floatsisf+0x6c>
 3a8:	bb 0f       	add	r27, r27
 3aa:	11 f4       	brne	.+4      	; 0x3b0 <__floatsisf+0x36>
 3ac:	60 ff       	sbrs	r22, 0
 3ae:	1b c0       	rjmp	.+54     	; 0x3e6 <__floatsisf+0x6c>
 3b0:	6f 5f       	subi	r22, 0xFF	; 255
 3b2:	7f 4f       	sbci	r23, 0xFF	; 255
 3b4:	8f 4f       	sbci	r24, 0xFF	; 255
 3b6:	9f 4f       	sbci	r25, 0xFF	; 255
 3b8:	16 c0       	rjmp	.+44     	; 0x3e6 <__floatsisf+0x6c>
 3ba:	88 23       	and	r24, r24
 3bc:	11 f0       	breq	.+4      	; 0x3c2 <__floatsisf+0x48>
 3be:	96 e9       	ldi	r25, 0x96	; 150
 3c0:	11 c0       	rjmp	.+34     	; 0x3e4 <__floatsisf+0x6a>
 3c2:	77 23       	and	r23, r23
 3c4:	21 f0       	breq	.+8      	; 0x3ce <__floatsisf+0x54>
 3c6:	9e e8       	ldi	r25, 0x8E	; 142
 3c8:	87 2f       	mov	r24, r23
 3ca:	76 2f       	mov	r23, r22
 3cc:	05 c0       	rjmp	.+10     	; 0x3d8 <__floatsisf+0x5e>
 3ce:	66 23       	and	r22, r22
 3d0:	71 f0       	breq	.+28     	; 0x3ee <__floatsisf+0x74>
 3d2:	96 e8       	ldi	r25, 0x86	; 134
 3d4:	86 2f       	mov	r24, r22
 3d6:	70 e0       	ldi	r23, 0x00	; 0
 3d8:	60 e0       	ldi	r22, 0x00	; 0
 3da:	2a f0       	brmi	.+10     	; 0x3e6 <__floatsisf+0x6c>
 3dc:	9a 95       	dec	r25
 3de:	66 0f       	add	r22, r22
 3e0:	77 1f       	adc	r23, r23
 3e2:	88 1f       	adc	r24, r24
 3e4:	da f7       	brpl	.-10     	; 0x3dc <__floatsisf+0x62>
 3e6:	88 0f       	add	r24, r24
 3e8:	96 95       	lsr	r25
 3ea:	87 95       	ror	r24
 3ec:	97 f9       	bld	r25, 7
 3ee:	08 95       	ret

000003f0 <__fp_inf>:
 3f0:	97 f9       	bld	r25, 7
 3f2:	9f 67       	ori	r25, 0x7F	; 127
 3f4:	80 e8       	ldi	r24, 0x80	; 128
 3f6:	70 e0       	ldi	r23, 0x00	; 0
 3f8:	60 e0       	ldi	r22, 0x00	; 0
 3fa:	08 95       	ret

000003fc <__fp_nan>:
 3fc:	9f ef       	ldi	r25, 0xFF	; 255
 3fe:	80 ec       	ldi	r24, 0xC0	; 192
 400:	08 95       	ret

00000402 <__fp_pscA>:
 402:	00 24       	eor	r0, r0
 404:	0a 94       	dec	r0
 406:	16 16       	cp	r1, r22
 408:	17 06       	cpc	r1, r23
 40a:	18 06       	cpc	r1, r24
 40c:	09 06       	cpc	r0, r25
 40e:	08 95       	ret

00000410 <__fp_pscB>:
 410:	00 24       	eor	r0, r0
 412:	0a 94       	dec	r0
 414:	12 16       	cp	r1, r18
 416:	13 06       	cpc	r1, r19
 418:	14 06       	cpc	r1, r20
 41a:	05 06       	cpc	r0, r21
 41c:	08 95       	ret

0000041e <__fp_round>:
 41e:	09 2e       	mov	r0, r25
 420:	03 94       	inc	r0
 422:	00 0c       	add	r0, r0
 424:	11 f4       	brne	.+4      	; 0x42a <__fp_round+0xc>
 426:	88 23       	and	r24, r24
 428:	52 f0       	brmi	.+20     	; 0x43e <__fp_round+0x20>
 42a:	bb 0f       	add	r27, r27
 42c:	40 f4       	brcc	.+16     	; 0x43e <__fp_round+0x20>
 42e:	bf 2b       	or	r27, r31
 430:	11 f4       	brne	.+4      	; 0x436 <__fp_round+0x18>
 432:	60 ff       	sbrs	r22, 0
 434:	04 c0       	rjmp	.+8      	; 0x43e <__fp_round+0x20>
 436:	6f 5f       	subi	r22, 0xFF	; 255
 438:	7f 4f       	sbci	r23, 0xFF	; 255
 43a:	8f 4f       	sbci	r24, 0xFF	; 255
 43c:	9f 4f       	sbci	r25, 0xFF	; 255
 43e:	08 95       	ret

00000440 <__fp_split3>:
 440:	57 fd       	sbrc	r21, 7
 442:	90 58       	subi	r25, 0x80	; 128
 444:	44 0f       	add	r20, r20
 446:	55 1f       	adc	r21, r21
 448:	59 f0       	breq	.+22     	; 0x460 <__fp_splitA+0x10>
 44a:	5f 3f       	cpi	r21, 0xFF	; 255
 44c:	71 f0       	breq	.+28     	; 0x46a <__fp_splitA+0x1a>
 44e:	47 95       	ror	r20

00000450 <__fp_splitA>:
 450:	88 0f       	add	r24, r24
 452:	97 fb       	bst	r25, 7
 454:	99 1f       	adc	r25, r25
 456:	61 f0       	breq	.+24     	; 0x470 <__fp_splitA+0x20>
 458:	9f 3f       	cpi	r25, 0xFF	; 255
 45a:	79 f0       	breq	.+30     	; 0x47a <__fp_splitA+0x2a>
 45c:	87 95       	ror	r24
 45e:	08 95       	ret
 460:	12 16       	cp	r1, r18
 462:	13 06       	cpc	r1, r19
 464:	14 06       	cpc	r1, r20
 466:	55 1f       	adc	r21, r21
 468:	f2 cf       	rjmp	.-28     	; 0x44e <__fp_split3+0xe>
 46a:	46 95       	lsr	r20
 46c:	f1 df       	rcall	.-30     	; 0x450 <__fp_splitA>
 46e:	08 c0       	rjmp	.+16     	; 0x480 <__fp_splitA+0x30>
 470:	16 16       	cp	r1, r22
 472:	17 06       	cpc	r1, r23
 474:	18 06       	cpc	r1, r24
 476:	99 1f       	adc	r25, r25
 478:	f1 cf       	rjmp	.-30     	; 0x45c <__fp_splitA+0xc>
 47a:	86 95       	lsr	r24
 47c:	71 05       	cpc	r23, r1
 47e:	61 05       	cpc	r22, r1
 480:	08 94       	sec
 482:	08 95       	ret

00000484 <__fp_zero>:
 484:	e8 94       	clt

00000486 <__fp_szero>:
 486:	bb 27       	eor	r27, r27
 488:	66 27       	eor	r22, r22
 48a:	77 27       	eor	r23, r23
 48c:	cb 01       	movw	r24, r22
 48e:	97 f9       	bld	r25, 7
 490:	08 95       	ret

00000492 <__mulsf3>:
 492:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <__mulsf3x>
 496:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__fp_round>
 49a:	0e 94 01 02 	call	0x402	; 0x402 <__fp_pscA>
 49e:	38 f0       	brcs	.+14     	; 0x4ae <__mulsf3+0x1c>
 4a0:	0e 94 08 02 	call	0x410	; 0x410 <__fp_pscB>
 4a4:	20 f0       	brcs	.+8      	; 0x4ae <__mulsf3+0x1c>
 4a6:	95 23       	and	r25, r21
 4a8:	11 f0       	breq	.+4      	; 0x4ae <__mulsf3+0x1c>
 4aa:	0c 94 f8 01 	jmp	0x3f0	; 0x3f0 <__fp_inf>
 4ae:	0c 94 fe 01 	jmp	0x3fc	; 0x3fc <__fp_nan>
 4b2:	11 24       	eor	r1, r1
 4b4:	0c 94 43 02 	jmp	0x486	; 0x486 <__fp_szero>

000004b8 <__mulsf3x>:
 4b8:	0e 94 20 02 	call	0x440	; 0x440 <__fp_split3>
 4bc:	70 f3       	brcs	.-36     	; 0x49a <__mulsf3+0x8>

000004be <__mulsf3_pse>:
 4be:	95 9f       	mul	r25, r21
 4c0:	c1 f3       	breq	.-16     	; 0x4b2 <__mulsf3+0x20>
 4c2:	95 0f       	add	r25, r21
 4c4:	50 e0       	ldi	r21, 0x00	; 0
 4c6:	55 1f       	adc	r21, r21
 4c8:	62 9f       	mul	r22, r18
 4ca:	f0 01       	movw	r30, r0
 4cc:	72 9f       	mul	r23, r18
 4ce:	bb 27       	eor	r27, r27
 4d0:	f0 0d       	add	r31, r0
 4d2:	b1 1d       	adc	r27, r1
 4d4:	63 9f       	mul	r22, r19
 4d6:	aa 27       	eor	r26, r26
 4d8:	f0 0d       	add	r31, r0
 4da:	b1 1d       	adc	r27, r1
 4dc:	aa 1f       	adc	r26, r26
 4de:	64 9f       	mul	r22, r20
 4e0:	66 27       	eor	r22, r22
 4e2:	b0 0d       	add	r27, r0
 4e4:	a1 1d       	adc	r26, r1
 4e6:	66 1f       	adc	r22, r22
 4e8:	82 9f       	mul	r24, r18
 4ea:	22 27       	eor	r18, r18
 4ec:	b0 0d       	add	r27, r0
 4ee:	a1 1d       	adc	r26, r1
 4f0:	62 1f       	adc	r22, r18
 4f2:	73 9f       	mul	r23, r19
 4f4:	b0 0d       	add	r27, r0
 4f6:	a1 1d       	adc	r26, r1
 4f8:	62 1f       	adc	r22, r18
 4fa:	83 9f       	mul	r24, r19
 4fc:	a0 0d       	add	r26, r0
 4fe:	61 1d       	adc	r22, r1
 500:	22 1f       	adc	r18, r18
 502:	74 9f       	mul	r23, r20
 504:	33 27       	eor	r19, r19
 506:	a0 0d       	add	r26, r0
 508:	61 1d       	adc	r22, r1
 50a:	23 1f       	adc	r18, r19
 50c:	84 9f       	mul	r24, r20
 50e:	60 0d       	add	r22, r0
 510:	21 1d       	adc	r18, r1
 512:	82 2f       	mov	r24, r18
 514:	76 2f       	mov	r23, r22
 516:	6a 2f       	mov	r22, r26
 518:	11 24       	eor	r1, r1
 51a:	9f 57       	subi	r25, 0x7F	; 127
 51c:	50 40       	sbci	r21, 0x00	; 0
 51e:	9a f0       	brmi	.+38     	; 0x546 <__mulsf3_pse+0x88>
 520:	f1 f0       	breq	.+60     	; 0x55e <__mulsf3_pse+0xa0>
 522:	88 23       	and	r24, r24
 524:	4a f0       	brmi	.+18     	; 0x538 <__mulsf3_pse+0x7a>
 526:	ee 0f       	add	r30, r30
 528:	ff 1f       	adc	r31, r31
 52a:	bb 1f       	adc	r27, r27
 52c:	66 1f       	adc	r22, r22
 52e:	77 1f       	adc	r23, r23
 530:	88 1f       	adc	r24, r24
 532:	91 50       	subi	r25, 0x01	; 1
 534:	50 40       	sbci	r21, 0x00	; 0
 536:	a9 f7       	brne	.-22     	; 0x522 <__mulsf3_pse+0x64>
 538:	9e 3f       	cpi	r25, 0xFE	; 254
 53a:	51 05       	cpc	r21, r1
 53c:	80 f0       	brcs	.+32     	; 0x55e <__mulsf3_pse+0xa0>
 53e:	0c 94 f8 01 	jmp	0x3f0	; 0x3f0 <__fp_inf>
 542:	0c 94 43 02 	jmp	0x486	; 0x486 <__fp_szero>
 546:	5f 3f       	cpi	r21, 0xFF	; 255
 548:	e4 f3       	brlt	.-8      	; 0x542 <__mulsf3_pse+0x84>
 54a:	98 3e       	cpi	r25, 0xE8	; 232
 54c:	d4 f3       	brlt	.-12     	; 0x542 <__mulsf3_pse+0x84>
 54e:	86 95       	lsr	r24
 550:	77 95       	ror	r23
 552:	67 95       	ror	r22
 554:	b7 95       	ror	r27
 556:	f7 95       	ror	r31
 558:	e7 95       	ror	r30
 55a:	9f 5f       	subi	r25, 0xFF	; 255
 55c:	c1 f7       	brne	.-16     	; 0x54e <__mulsf3_pse+0x90>
 55e:	fe 2b       	or	r31, r30
 560:	88 0f       	add	r24, r24
 562:	91 1d       	adc	r25, r1
 564:	96 95       	lsr	r25
 566:	87 95       	ror	r24
 568:	97 f9       	bld	r25, 7
 56a:	08 95       	ret

0000056c <__divmodhi4>:
 56c:	97 fb       	bst	r25, 7
 56e:	07 2e       	mov	r0, r23
 570:	16 f4       	brtc	.+4      	; 0x576 <__divmodhi4+0xa>
 572:	00 94       	com	r0
 574:	07 d0       	rcall	.+14     	; 0x584 <__divmodhi4_neg1>
 576:	77 fd       	sbrc	r23, 7
 578:	09 d0       	rcall	.+18     	; 0x58c <__divmodhi4_neg2>
 57a:	0e 94 ca 02 	call	0x594	; 0x594 <__udivmodhi4>
 57e:	07 fc       	sbrc	r0, 7
 580:	05 d0       	rcall	.+10     	; 0x58c <__divmodhi4_neg2>
 582:	3e f4       	brtc	.+14     	; 0x592 <__divmodhi4_exit>

00000584 <__divmodhi4_neg1>:
 584:	90 95       	com	r25
 586:	81 95       	neg	r24
 588:	9f 4f       	sbci	r25, 0xFF	; 255
 58a:	08 95       	ret

0000058c <__divmodhi4_neg2>:
 58c:	70 95       	com	r23
 58e:	61 95       	neg	r22
 590:	7f 4f       	sbci	r23, 0xFF	; 255

00000592 <__divmodhi4_exit>:
 592:	08 95       	ret

00000594 <__udivmodhi4>:
 594:	aa 1b       	sub	r26, r26
 596:	bb 1b       	sub	r27, r27
 598:	51 e1       	ldi	r21, 0x11	; 17
 59a:	07 c0       	rjmp	.+14     	; 0x5aa <__udivmodhi4_ep>

0000059c <__udivmodhi4_loop>:
 59c:	aa 1f       	adc	r26, r26
 59e:	bb 1f       	adc	r27, r27
 5a0:	a6 17       	cp	r26, r22
 5a2:	b7 07       	cpc	r27, r23
 5a4:	10 f0       	brcs	.+4      	; 0x5aa <__udivmodhi4_ep>
 5a6:	a6 1b       	sub	r26, r22
 5a8:	b7 0b       	sbc	r27, r23

000005aa <__udivmodhi4_ep>:
 5aa:	88 1f       	adc	r24, r24
 5ac:	99 1f       	adc	r25, r25
 5ae:	5a 95       	dec	r21
 5b0:	a9 f7       	brne	.-22     	; 0x59c <__udivmodhi4_loop>
 5b2:	80 95       	com	r24
 5b4:	90 95       	com	r25
 5b6:	bc 01       	movw	r22, r24
 5b8:	cd 01       	movw	r24, r26
 5ba:	08 95       	ret

000005bc <_exit>:
 5bc:	f8 94       	cli

000005be <__stop_program>:
 5be:	ff cf       	rjmp	.-2      	; 0x5be <__stop_program>
